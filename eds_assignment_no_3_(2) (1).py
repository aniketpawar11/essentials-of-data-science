# -*- coding: utf-8 -*-
"""EDS assignment no 3 (2).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QhYQ9BqBl0_Z28Af4rrIHqG_m9XI4OKP
"""

import numpy as np

array1=np.array([[1,2,3],[4,5,6],[7,8,9]])
array1

array2=np.array([[11,12,13],[14,15,16],[17,18,19]])
array2

resultarray=array1+array2
print("\nUsing Operator:\n",resultarray)
resultarray=np.add(array1,array2)
print("\nUsing Numpy Function:\n",resultarray)

resultarray=array1-array2
print("\nUsing Operator:\n",resultarray)
resultarray=np.subtract(array1,array2)
print("\nUsing Numpy Function:\n",resultarray)

resultarray=array1*array2
print("\nUsing Operator:\n",resultarray)
resultarray=np.multiply(array1,array2)
print("\nUsing Numpy Function:\n",resultarray)

resultarray=array1/array2
print("\nUsing Operator:\n",resultarray)
resultarray=np.divide(array1,array2)
print("\nUsing Numpy Function:\n",resultarray)

resultarray=array1%array2
print("\nUsing Operator:\n",resultarray)
resultarray=np.mod(array1,array2)
print("\nUsing Numpy Function:\n",resultarray)

resultarray=np.dot(array1,array2)
print("",resultarray)

resultarray=np.transpose(array1)
print(resultarray)
#Or
resultarray=array1.transpose()
print(resultarray)

resultarray=np.hstack((array1,array2))
resultarray

resultarray=np.vstack((array1,array2))
resultarray

nparray=np.linspace(start=0,stop=24,num=12).reshape(3,4)
nparray

nparray=np.empty((3,3),int)
nparray

nparray=np.empty_like(array1)
nparray

nparray=np.identity(3)
nparray

array1=np.array([1,2,3,4,5])
array2=np.array([11,12,13,14,15])
print(array1)
print(array2)

# Addition
print(np.add(array1,array2))
# Subtraction
print(np.subtract(array1,array2))
# Multiplication
print(np.multiply(array1,array2))
# Division
print(np.divide(array1,array2))

array1=np.array([1,2,3,4,5,9,6,7,8,9,9])
# Standard Deviation
print(np.std(array1))
#Minimum
print(np.min(array1))
#Summation
print(np.sum(array1))
#Median
print(np.median(array1))
#Mean
print(np.mean(array1))
#Mode
from scipy import stats
print("Most Frequent element=",stats.mode(array1)[0])
print("Number of Occarances=",stats.mode(array1)[1])
# Variance
print(np.var(array1))

array1=np.array([1,2,3],dtype=np.uint8)
array2=np.array([4,5,6])
# AND
resultarray=np.bitwise_and(array1,array2)
print(resultarray)
# OR
resultarray=np.bitwise_or(array1,array2)
print(resultarray)
#LeftShift
resultarray=np.left_shift(array1,2)
print(resultarray)
#RightShift
resultarray=np.right_shift(array1,2)
print(resultarray)

### You can get Binary Representation of Number ######
print(np.binary_repr(10,8))
resultarray=np.left_shift(10,2)
print(resultarray)
print(np.binary_repr(np.left_shift(10,2),8))

array1=np.arange(1,10)
print(array1)
newarray=array1.copy()
print(newarray)
##modification in Original Array
array1[0]=100
print(array1)
print(newarray)

array1=np.arange(1,10)
print(array1)
newarray=array1.view()
print(newarray)
##modification in Original Array
array1[0]=100
print(array1)
print(newarray)

array1=np.array([[1,2,3,12,5,7],[94,5,6,7,89,44],[7,8,9,11,13,14]])
print(array1)

np.sort(array1,axis=0)#Horizontally Sort

array1=np.array([1,2,3,12,5,7])
np.searchsorted(array1,7,side="left")#Perform Search After sorting

array1=np.array([1,2,3,12,5,7,0])
print(np.count_nonzero(array1))#Return total Non Zero element
print(np.nonzero(array1))#Return Index
print(array1.size)#Total Element

array1=np.array(np.arange(1,5).reshape(2,2))
print(array1)
array2=np.array(np.arange(11,15).reshape(2,2))
print(array2)

newarray=np.stack([array1,array2],axis=0)
print(newarray)

newarray=np.stack([array1,array2],axis=1)
print(newarray)

array1=np.arange(1,10).reshape(3,3)
print(array1)
array2=np.arange(21,30).reshape(3,3)
print(array2)

np.append(array1,array2,axis=0)

np.append(array1,array2,axis=1)

array1=np.arange(1,10).reshape(3,3)
print(array1)
array2=np.arange(21,30).reshape(3,3)
print(array2)



np.concatenate((array1,array2),axis=0)

np.concatenate((array1,array2),axis=1)

import numpy as np

# using loadtxt()
arr = np.loadtxt("/content/testmarks1 (2).csv",delimiter=",",skiprows=1)
print(type(arr))
arr.shape

EDS=arr[:,1]

print(EDS)

SON=arr[:,2]
print(SON)